{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.18.4.5664",
      "templateHash": "4778934485667717184"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "Specifies the location for all resources."
      }
    },
    "environment": {
      "type": "string",
      "defaultValue": "dev",
      "metadata": {
        "description": "Specifies the environment of the deployment."
      },
      "allowedValues": [
        "dev",
        "tst",
        "prd"
      ]
    },
    "prefix": {
      "type": "string",
      "metadata": {
        "description": "Specifies the prefix for all resources created in this deployment."
      },
      "maxLength": 10,
      "minLength": 2
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Specifies the tags that you want to apply to all resources."
      }
    },
    "purviewRootCollectionAdminObjectIds": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Specifies the list of user object IDs that are assigned as collection admin to the root collection in Purview."
      }
    },
    "enableDnsAndFirewallDeployment": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Specifies whether firewall and private DNS Zones should be deployed."
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Specifies the address space of the vnet."
      }
    },
    "azureFirewallSubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "Specifies the address space of the subnet that is use for Azure Firewall. Optional if `enableDnsAndFirewallDeployment` is set to `true`."
      }
    },
    "servicesSubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": {
        "description": "Specifies the address space of the subnet that is used for the services."
      }
    },
    "firewallPrivateIp": {
      "type": "string",
      "defaultValue": "10.0.0.4",
      "metadata": {
        "description": "Specifies the private IP address of the central firewall. Optional if `enableDnsAndFirewallDeployment` is set to `true`."
      }
    },
    "dnsServerAdresses": {
      "type": "array",
      "defaultValue": [
        "10.0.0.4"
      ],
      "metadata": {
        "description": "Specifies the private IP addresses of the dns servers. Optional if `enableDnsAndFirewallDeployment` is set to `true`."
      }
    },
    "firewallTier": {
      "type": "string",
      "defaultValue": "Premium",
      "metadata": {
        "description": "Specifies the tier of the Azure Firewall.  Optional if `enableDnsAndFirewallDeployment` is set to `false`."
      },
      "allowedValues": [
        "Standard",
        "Premium"
      ]
    },
    "firewallPolicyId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Specifies the resource ID of the Azure Firewall Policy. Optional parameter allows you to deploy Firewall rules to an existing Firewall Policy if `enableDnsAndFirewallDeployment` is set to `false`."
      }
    },
    "privateDnsZoneIdKeyVault": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Specifies the resource ID of the private DNS zone for Key Vault. Optional if `enableDnsAndFirewallDeployment` is set to `true`."
      }
    },
    "privateDnsZoneIdPurview": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Specifies the resource ID of the private DNS zone for Purview. Optional if `enableDnsAndFirewallDeployment` is set to `true`."
      }
    },
    "privateDnsZoneIdPurviewPortal": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Specifies the resource ID of the private DNS zone for Purview Portal. Optional if `enableDnsAndFirewallDeployment` is set to `true`."
      }
    },
    "privateDnsZoneIdQueue": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Specifies the resource ID of the private DNS zone for Queue storage. Optional if `enableDnsAndFirewallDeployment` is set to `true`."
      }
    },
    "privateDnsZoneIdBlob": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Specifies the resource ID of the private DNS zone for Blob storage. Optional if `enableDnsAndFirewallDeployment` is set to `true`."
      }
    },
    "privateDnsZoneIdNamespace": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Specifies the resource ID of the private DNS zone for EventHub namespaces. Optional if `enableDnsAndFirewallDeployment` is set to `true`."
      }
    },
    "privateDnsZoneIdContainerRegistry": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Specifies the resource ID of the private DNS zone for Container Registry. Optional if `enableDnsAndFirewallDeployment` is set to `true`."
      }
    },
    "privateDnsZoneIdSynapse": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Specifies the resource ID of the private DNS zone for Synapse. Optional if `enableDnsAndFirewallDeployment` is set to `true`."
      }
    }
  },
  "variables": {
    "name": "[toLower(format('{0}-{1}', parameters('prefix'), parameters('environment')))]",
    "tagsDefault": {
      "Owner": "Hamood Aleem",
      "Project": "Platform Landing Zone",
      "Environment": "[parameters('environment')]",
      "Toolkit": "bicep",
      "Name": "[variables('name')]"
    },
    "tagsJoined": "[union(variables('tagsDefault'), parameters('tags'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-01-01",
      "name": "[format('{0}-network', variables('name'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tagsJoined')]",
      "properties": {}
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "networkServices",
      "resourceGroup": "[format('{0}-network', variables('name'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "prefix": {
            "value": "[variables('name')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tagsJoined')]"
          },
          "vnetAddressPrefix": {
            "value": "[parameters('vnetAddressPrefix')]"
          },
          "azureFirewallSubnetAddressPrefix": {
            "value": "[parameters('azureFirewallSubnetAddressPrefix')]"
          },
          "servicesSubnetAddressPrefix": {
            "value": "[parameters('servicesSubnetAddressPrefix')]"
          },
          "dnsServerAdresses": {
            "value": "[parameters('dnsServerAdresses')]"
          },
          "enableDnsAndFirewallDeployment": {
            "value": "[parameters('enableDnsAndFirewallDeployment')]"
          },
          "firewallPrivateIp": {
            "value": "[parameters('firewallPrivateIp')]"
          },
          "firewallTier": {
            "value": "[parameters('firewallTier')]"
          },
          "firewallPolicyId": {
            "value": "[parameters('firewallPolicyId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "11027968273699430711"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "prefix": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "firewallPrivateIp": {
              "type": "string",
              "defaultValue": "10.0.0.4"
            },
            "dnsServerAdresses": {
              "type": "array",
              "defaultValue": [
                "10.0.0.4"
              ]
            },
            "vnetAddressPrefix": {
              "type": "string",
              "defaultValue": "10.0.0.0/16"
            },
            "azureFirewallSubnetAddressPrefix": {
              "type": "string",
              "defaultValue": "10.0.0.0/24"
            },
            "servicesSubnetAddressPrefix": {
              "type": "string",
              "defaultValue": "10.0.1.0/24"
            },
            "enableDnsAndFirewallDeployment": {
              "type": "bool",
              "defaultValue": true
            },
            "firewallTier": {
              "type": "string",
              "defaultValue": "Premium",
              "allowedValues": [
                "Standard",
                "Premium"
              ]
            },
            "firewallPolicyId": {
              "type": "string",
              "defaultValue": ""
            }
          },
          "variables": {
            "azureFirewallSubnetName": "AzureFirewallSubnet",
            "servicesSubnetName": "ServicesSubnet",
            "firewallPolicySubscriptionId": "[if(greaterOrEquals(length(split(parameters('firewallPolicyId'), '/')), 9), split(parameters('firewallPolicyId'), '/')[2], subscription().subscriptionId)]",
            "firewallPolicyResourceGroupName": "[if(greaterOrEquals(length(split(parameters('firewallPolicyId'), '/')), 9), split(parameters('firewallPolicyId'), '/')[4], resourceGroup().name)]",
            "firewallPolicyName": "[if(greaterOrEquals(length(split(parameters('firewallPolicyId'), '/')), 9), last(split(parameters('firewallPolicyId'), '/')), 'incorrectSegmentLength')]",
            "firewallPremiumRegions": [
              "australiacentral",
              "australiacentral2",
              "australiaeast",
              "australiasoutheast",
              "brazilsouth",
              "brazilsoutheast",
              "canadacentral",
              "canadaeast",
              "centralindia",
              "centralus",
              "centraluseuap",
              "chinanorth2",
              "chinaeast2",
              "eastasia",
              "eastus",
              "eastus2",
              "francecentral",
              "francesouth",
              "germanywestcentral",
              "japaneast",
              "japanwest",
              "koreacentral",
              "koreasouth",
              "northcentralus",
              "northeurope",
              "norwayeast",
              "southafricanorth",
              "southcentralus",
              "southindia",
              "southeastasia",
              "swedencentral",
              "switzerlandnorth",
              "uaecentral",
              "uaenorth",
              "uksouth",
              "ukwest",
              "usgovarizona",
              "usgovtexas",
              "usgovvirginia",
              "westcentralus",
              "westeurope",
              "westindia",
              "westus",
              "westus2",
              "westus3"
            ],
            "availabilityZoneRegions": [
              "australiaeast",
              "brazilsouth",
              "canadacentral",
              "centralus",
              "centralindia",
              "eastasia",
              "eastus",
              "eastus2",
              "francecentral",
              "germanywestcentral",
              "japaneast",
              "koreacentral",
              "northeurope",
              "norwayeast",
              "uksouth",
              "southeastasia",
              "southcentralus",
              "swedencentral",
              "usgovvirginia",
              "westeurope",
              "westus2",
              "westus3"
            ],
            "firewallPolicyPremiumProperties": {
              "intrusionDetection": {
                "mode": "Deny",
                "configuration": {
                  "bypassTrafficSettings": [],
                  "signatureOverrides": []
                }
              },
              "threatIntelMode": "Deny",
              "threatIntelWhitelist": {
                "fqdns": [],
                "ipAddresses": []
              },
              "sku": {
                "tier": "Premium"
              },
              "dnsSettings": {
                "enableProxy": true,
                "servers": []
              }
            },
            "firewallPolicyStandardProperties": {
              "threatIntelMode": "Deny",
              "threatIntelWhitelist": {
                "fqdns": [],
                "ipAddresses": []
              },
              "sku": {
                "tier": "Standard"
              },
              "dnsSettings": {
                "enableProxy": true,
                "servers": []
              }
            },
            "generalSubnets": [
              {
                "name": "[variables('servicesSubnetName')]",
                "properties": {
                  "addressPrefix": "[parameters('servicesSubnetAddressPrefix')]",
                  "addressPrefixes": [],
                  "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('prefix')))]"
                  },
                  "routeTable": {
                    "id": "[resourceId('Microsoft.Network/routeTables', format('{0}-routetable', parameters('prefix')))]"
                  },
                  "delegations": [],
                  "privateEndpointNetworkPolicies": "Disabled",
                  "privateLinkServiceNetworkPolicies": "Disabled",
                  "serviceEndpointPolicies": [],
                  "serviceEndpoints": []
                }
              }
            ],
            "azureFirewallSubnet": "[if(parameters('enableDnsAndFirewallDeployment'), createArray(createObject('name', variables('azureFirewallSubnetName'), 'properties', createObject('addressPrefix', parameters('azureFirewallSubnetAddressPrefix'), 'addressPrefixes', createArray(), 'delegations', createArray(), 'privateEndpointNetworkPolicies', 'Enabled', 'privateLinkServiceNetworkPolicies', 'Enabled', 'serviceEndpointPolicies', createArray(), 'serviceEndpoints', createArray()))), createArray())]",
            "subnets": "[concat(variables('generalSubnets'), variables('azureFirewallSubnet'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/routeTables",
              "apiVersion": "2020-11-01",
              "name": "[format('{0}-routetable', parameters('prefix'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "disableBgpRoutePropagation": false,
                "routes": []
              }
            },
            {
              "type": "Microsoft.Network/routeTables/routes",
              "apiVersion": "2020-11-01",
              "name": "[format('{0}/{1}', format('{0}-routetable', parameters('prefix')), 'to-firewall-default')]",
              "properties": {
                "addressPrefix": "0.0.0.0/0",
                "nextHopType": "VirtualAppliance",
                "nextHopIpAddress": "[if(parameters('enableDnsAndFirewallDeployment'), reference(resourceId('Microsoft.Network/azureFirewalls', format('{0}-firewall', parameters('prefix'))), '2020-11-01').ipConfigurations[0].properties.privateIPAddress, parameters('firewallPrivateIp'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/azureFirewalls', format('{0}-firewall', parameters('prefix')))]",
                "[resourceId('Microsoft.Network/routeTables', format('{0}-routetable', parameters('prefix')))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2020-11-01",
              "name": "[format('{0}-nsg', parameters('prefix'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "securityRules": []
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}-vnet', parameters('prefix'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vnetAddressPrefix')]"
                  ]
                },
                "dhcpOptions": {
                  "dnsServers": "[if(parameters('enableDnsAndFirewallDeployment'), createArray(), parameters('dnsServerAdresses'))]"
                },
                "enableDdosProtection": false,
                "subnets": "[variables('subnets')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('prefix')))]",
                "[resourceId('Microsoft.Network/routeTables', format('{0}-routetable', parameters('prefix')))]"
              ]
            },
            {
              "condition": "[parameters('enableDnsAndFirewallDeployment')]",
              "type": "Microsoft.Network/publicIPPrefixes",
              "apiVersion": "2020-11-01",
              "name": "[format('{0}-publicipprefix', parameters('prefix'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "prefixLength": 30
              }
            },
            {
              "condition": "[parameters('enableDnsAndFirewallDeployment')]",
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2020-11-01",
              "name": "[format('{0}-publicip001', parameters('prefix'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                  "domainNameLabel": "[format('{0}-publicip001', parameters('prefix'))]"
                },
                "publicIPPrefix": {
                  "id": "[resourceId('Microsoft.Network/publicIPPrefixes', format('{0}-publicipprefix', parameters('prefix')))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPPrefixes', format('{0}-publicipprefix', parameters('prefix')))]"
              ]
            },
            {
              "condition": "[parameters('enableDnsAndFirewallDeployment')]",
              "type": "Microsoft.Network/firewallPolicies",
              "apiVersion": "2021-05-01",
              "name": "[format('{0}-firewallpolicy', parameters('prefix'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": "[if(and(equals(parameters('firewallTier'), 'Premium'), contains(variables('firewallPremiumRegions'), parameters('location'))), variables('firewallPolicyPremiumProperties'), variables('firewallPolicyStandardProperties'))]"
            },
            {
              "condition": "[parameters('enableDnsAndFirewallDeployment')]",
              "type": "Microsoft.Network/azureFirewalls",
              "apiVersion": "2020-11-01",
              "name": "[format('{0}-firewall', parameters('prefix'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "zones": "[if(contains(variables('availabilityZoneRegions'), parameters('location')), createArray('1', '2', '3'), createArray())]",
              "properties": {
                "sku": {
                  "name": "AZFW_VNet",
                  "tier": "[if(contains(variables('firewallPremiumRegions'), parameters('location')), parameters('firewallTier'), 'Standard')]"
                },
                "ipConfigurations": [
                  {
                    "name": "ipConfiguration001",
                    "properties": {
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-publicip001', parameters('prefix')))]"
                      },
                      "subnet": {
                        "id": "[reference(resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet', parameters('prefix'))), '2020-06-01').subnets[1].id]"
                      }
                    }
                  }
                ],
                "firewallPolicy": {
                  "id": "[resourceId('Microsoft.Network/firewallPolicies', format('{0}-firewallpolicy', parameters('prefix')))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/firewallPolicies', format('{0}-firewallpolicy', parameters('prefix')))]",
                "[resourceId('Microsoft.Resources/deployments', format('{0}-firewallpolicy-rules', parameters('prefix')))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-publicip001', parameters('prefix')))]",
                "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet', parameters('prefix')))]"
              ]
            },
            {
              "condition": "[parameters('enableDnsAndFirewallDeployment')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-firewallpolicy-rules', parameters('prefix'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "firewallPolicyName": {
                    "value": "[format('{0}-firewallpolicy', parameters('prefix'))]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.18.4.5664",
                      "templateHash": "6453827202746741518"
                    }
                  },
                  "parameters": {
                    "firewallPolicyName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/networkrules-rulecollection', parameters('firewallPolicyName'))]",
                      "properties": {
                        "priority": 10000,
                        "ruleCollections": [
                          {
                            "name": "MachineLearning-NetworkRules",
                            "priority": 10100,
                            "action": {
                              "type": "Allow"
                            },
                            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                            "rules": [
                              {
                                "name": "MachineLearning-NetworkRule-001",
                                "ruleType": "NetworkRule",
                                "ipProtocols": [
                                  "TCP"
                                ],
                                "sourceAddresses": [
                                  "*"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [
                                  "AzureActiveDirectory",
                                  "AzureMachineLearning",
                                  "AzureResourceManager",
                                  "Storage",
                                  "AzureKeyVault",
                                  "AzureContainerRegistry",
                                  "MicrosoftContainerRegistry",
                                  "AzureFrontDoor.FirstParty"
                                ],
                                "destinationIpGroups": [],
                                "destinationFqdns": [],
                                "destinationPorts": [
                                  "*"
                                ],
                                "description": "Allow outbound access to required services"
                              }
                            ]
                          },
                          {
                            "name": "HDInsight-NetworkRules",
                            "priority": 10200,
                            "action": {
                              "type": "Allow"
                            },
                            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                            "rules": [
                              {
                                "name": "HDInsight-NetworkRule-001",
                                "ruleType": "NetworkRule",
                                "ipProtocols": [
                                  "TCP"
                                ],
                                "sourceAddresses": [
                                  "*"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [
                                  "Sql"
                                ],
                                "destinationIpGroups": [],
                                "destinationFqdns": [],
                                "destinationPorts": [
                                  "1433"
                                ],
                                "description": "Allow default SQL servers provided by HDInsight"
                              },
                              {
                                "name": "HDInsight-NetworkRule-002",
                                "ruleType": "NetworkRule",
                                "ipProtocols": [
                                  "TCP"
                                ],
                                "sourceAddresses": [
                                  "*"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [
                                  "AzureMonitor"
                                ],
                                "destinationIpGroups": [],
                                "destinationFqdns": [],
                                "destinationPorts": [
                                  "*"
                                ],
                                "description": "Allows scale feature of HDInsight"
                              }
                            ]
                          },
                          {
                            "name": "Databricks-NetworkRules",
                            "priority": 10300,
                            "action": {
                              "type": "Allow"
                            },
                            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                            "rules": [
                              {
                                "name": "Databricks-NetworkRule-001",
                                "ruleType": "NetworkRule",
                                "ipProtocols": [
                                  "TCP"
                                ],
                                "sourceAddresses": [
                                  "*"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [
                                  "AzureActiveDirectory",
                                  "AzureFrontDoor.Frontend"
                                ],
                                "destinationIpGroups": [],
                                "destinationFqdns": [],
                                "destinationPorts": [
                                  "443"
                                ],
                                "description": "Allow OAuth flow for the User to the Workspace Private Endpoint and features like Mount Points, Credential Passthrough, etc."
                              },
                              {
                                "name": "Databricks-NetworkRule-002",
                                "ruleType": "NetworkRule",
                                "ipProtocols": [
                                  "TCP"
                                ],
                                "sourceAddresses": [
                                  "*"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [
                                  "AzureDatabricks",
                                  "Storage"
                                ],
                                "destinationIpGroups": [],
                                "destinationFqdns": [],
                                "destinationPorts": [
                                  "443"
                                ],
                                "description": "Required for workers communication with Azure Storage services and Databricks Webapp"
                              },
                              {
                                "name": "Databricks-NetworkRule-003",
                                "ruleType": "NetworkRule",
                                "ipProtocols": [
                                  "TCP"
                                ],
                                "sourceAddresses": [
                                  "*"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [
                                  "Sql"
                                ],
                                "destinationIpGroups": [],
                                "destinationFqdns": [],
                                "destinationPorts": [
                                  "3306"
                                ],
                                "description": "Required for workers communication with Azure SQL services"
                              },
                              {
                                "name": "Databricks-NetworkRule-004",
                                "ruleType": "NetworkRule",
                                "ipProtocols": [
                                  "TCP"
                                ],
                                "sourceAddresses": [
                                  "*"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [
                                  "EventHub"
                                ],
                                "destinationIpGroups": [],
                                "destinationFqdns": [],
                                "destinationPorts": [
                                  "9093"
                                ],
                                "description": "Required for workers communication with Azure Eventhub services"
                              }
                            ]
                          },
                          {
                            "name": "Azure-NetworkRules",
                            "priority": 10400,
                            "action": {
                              "type": "Allow"
                            },
                            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                            "rules": [
                              {
                                "name": "Azure-NetworkRule-001",
                                "ruleType": "NetworkRule",
                                "ipProtocols": [
                                  "TCP"
                                ],
                                "sourceAddresses": [
                                  "*"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [
                                  "23.102.135.246",
                                  "51.4.143.248",
                                  "23.97.0.13",
                                  "42.159.7.249"
                                ],
                                "destinationIpGroups": [],
                                "destinationFqdns": [],
                                "destinationPorts": [
                                  "1688"
                                ],
                                "description": "Allow Windows Activation in Azure through Azure KMS Service"
                              }
                            ]
                          },
                          {
                            "name": "AzureDevOps-NetworkRules",
                            "priority": 10500,
                            "action": {
                              "type": "Allow"
                            },
                            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                            "rules": [
                              {
                                "name": "AzureDevOps-NetworkRule-001",
                                "ruleType": "NetworkRule",
                                "ipProtocols": [
                                  "TCP"
                                ],
                                "sourceAddresses": [
                                  "*"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [
                                  "13.107.6.0/24",
                                  "13.107.9.0/24",
                                  "13.107.42.0/24",
                                  "13.107.43.0/24"
                                ],
                                "destinationIpGroups": [],
                                "destinationFqdns": [],
                                "destinationPorts": [
                                  "443"
                                ],
                                "description": "Allow Self-hosted DevOps Agents to poll for pending jobs"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/applicationrules-rulecollection', parameters('firewallPolicyName'))]",
                      "properties": {
                        "priority": 20000,
                        "ruleCollections": [
                          {
                            "name": "MachineLearning-ApplicationRules",
                            "priority": 20100,
                            "action": {
                              "type": "Allow"
                            },
                            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                            "rules": [
                              {
                                "name": "MachineLearning-ApplicationRule-001",
                                "ruleType": "ApplicationRule",
                                "protocols": [
                                  {
                                    "protocolType": "Http",
                                    "port": 80
                                  },
                                  {
                                    "protocolType": "Https",
                                    "port": 443
                                  }
                                ],
                                "fqdnTags": [],
                                "targetFqdns": [
                                  "anaconda.com",
                                  "*.anaconda.com",
                                  "*.anaconda.org",
                                  "pypi.org",
                                  "cloud.r-project.org",
                                  "*pytorch.org",
                                  "*.tensorflow.org",
                                  "update.code.visualstudio.com",
                                  "*.vo.msecnd.net",
                                  "*.instances.azureml.net",
                                  "*.instances.azureml.ms"
                                ],
                                "targetUrls": [],
                                "terminateTLS": false,
                                "sourceAddresses": [
                                  "*"
                                ],
                                "destinationAddresses": [],
                                "sourceIpGroups": [],
                                "description": "MachineLearning allow common FQDNs"
                              }
                            ]
                          },
                          {
                            "name": "HDInsight-ApplicationRules",
                            "priority": 20200,
                            "action": {
                              "type": "Allow"
                            },
                            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                            "rules": [
                              {
                                "name": "HDInsight-ApplicationRule-001",
                                "ruleType": "ApplicationRule",
                                "protocols": [
                                  {
                                    "protocolType": "Http",
                                    "port": 80
                                  },
                                  {
                                    "protocolType": "Https",
                                    "port": 443
                                  }
                                ],
                                "fqdnTags": [
                                  "HDInsight",
                                  "WindowsUpdate"
                                ],
                                "targetFqdns": [],
                                "targetUrls": [],
                                "terminateTLS": false,
                                "sourceAddresses": [
                                  "*"
                                ],
                                "destinationAddresses": [],
                                "sourceIpGroups": [],
                                "description": "HDInsight Service Tag Rule"
                              },
                              {
                                "name": "HDInsight-ApplicationRule-002",
                                "ruleType": "ApplicationRule",
                                "protocols": [
                                  {
                                    "protocolType": "Https",
                                    "port": 443
                                  }
                                ],
                                "fqdnTags": [],
                                "targetFqdns": [
                                  "login.microsoftonline.com",
                                  "login.windows.net"
                                ],
                                "targetUrls": [],
                                "terminateTLS": false,
                                "sourceAddresses": [
                                  "*"
                                ],
                                "destinationAddresses": [],
                                "sourceIpGroups": [],
                                "description": "Allows Windows login activity"
                              }
                            ]
                          },
                          {
                            "name": "DataFactory-ApplicationRules",
                            "priority": 20300,
                            "action": {
                              "type": "Allow"
                            },
                            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                            "rules": [
                              {
                                "name": "DataFactory-ApplicationRule-001",
                                "ruleType": "ApplicationRule",
                                "protocols": [
                                  {
                                    "protocolType": "Http",
                                    "port": 80
                                  },
                                  {
                                    "protocolType": "Https",
                                    "port": 443
                                  }
                                ],
                                "fqdnTags": [],
                                "targetFqdns": [
                                  "go.microsoft.com",
                                  "download.microsoft.com",
                                  "browser.events.data.msn.com",
                                  "*.clouddatahub.net"
                                ],
                                "targetUrls": [],
                                "terminateTLS": false,
                                "sourceAddresses": [
                                  "*"
                                ],
                                "destinationAddresses": [],
                                "sourceIpGroups": [],
                                "description": "Allows download of Self-hosted Integration Runtime installer and updates"
                              },
                              {
                                "name": "DataFactory-ApplicationRule-002",
                                "ruleType": "ApplicationRule",
                                "protocols": [
                                  {
                                    "protocolType": "Https",
                                    "port": 443
                                  }
                                ],
                                "fqdnTags": [],
                                "targetFqdns": [
                                  "*.servicebus.windows.net"
                                ],
                                "targetUrls": [],
                                "terminateTLS": false,
                                "sourceAddresses": [
                                  "*"
                                ],
                                "destinationAddresses": [],
                                "sourceIpGroups": [],
                                "description": "Allows interactive authoring and logging with Self-hosted Integration Runtime and Azure SSIS"
                              },
                              {
                                "name": "DataFactory-ApplicationRule-003",
                                "ruleType": "ApplicationRule",
                                "protocols": [
                                  {
                                    "protocolType": "Http",
                                    "port": 80
                                  },
                                  {
                                    "protocolType": "Https",
                                    "port": 443
                                  }
                                ],
                                "fqdnTags": [],
                                "targetFqdns": [
                                  "*.githubusercontent.com"
                                ],
                                "targetUrls": [],
                                "terminateTLS": false,
                                "sourceAddresses": [
                                  "*"
                                ],
                                "destinationAddresses": [],
                                "sourceIpGroups": [],
                                "description": "Allows download of SHIR install script from GitHub"
                              }
                            ]
                          },
                          {
                            "name": "Databricks-ApplicationRules",
                            "priority": 20400,
                            "action": {
                              "type": "Allow"
                            },
                            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                            "rules": [
                              {
                                "name": "Databricks-ApplicationRule-001",
                                "ruleType": "ApplicationRule",
                                "protocols": [
                                  {
                                    "protocolType": "Http",
                                    "port": 80
                                  },
                                  {
                                    "protocolType": "Https",
                                    "port": 443
                                  }
                                ],
                                "fqdnTags": [],
                                "targetFqdns": [
                                  "tunnel.australiaeast.azuredatabricks.net",
                                  "tunnel.brazilsouth.azuredatabricks.net",
                                  "tunnel.canadacentral.azuredatabricks.net",
                                  "tunnel.centralindia.azuredatabricks.net",
                                  "tunnel.eastus2.azuredatabricks.net",
                                  "tunnel.eastus2c2.azuredatabricks.net",
                                  "tunnel.eastusc3.azuredatabricks.net",
                                  "tunnel.centralusc2.azuredatabricks.net",
                                  "tunnel.northcentralusc2.azuredatabricks.net",
                                  "tunnel.southeastasia.azuredatabricks.net",
                                  "tunnel.francecentral.azuredatabricks.net",
                                  "tunnel.japaneast.azuredatabricks.net",
                                  "tunnel.koreacentral.azuredatabricks.net",
                                  "tunnel.northeuropec2.azuredatabricks.net",
                                  "tunnel.westus.azuredatabricks.net",
                                  "tunnel.westeurope.azuredatabricks.net",
                                  "tunnel.westeuropec2.azuredatabricks.net",
                                  "tunnel.southafricanorth.azuredatabricks.net",
                                  "tunnel.switzerlandnorth.azuredatabricks.net",
                                  "tunnel.uaenorth.azuredatabricks.net",
                                  "tunnel.ukwest.azuredatabricks.net"
                                ],
                                "targetUrls": [],
                                "terminateTLS": false,
                                "sourceAddresses": [
                                  "*"
                                ],
                                "destinationAddresses": [],
                                "sourceIpGroups": [],
                                "description": "Allows Secure Cluster Connectivity option"
                              },
                              {
                                "name": "Databricks-ApplicationRule-002",
                                "ruleType": "ApplicationRule",
                                "protocols": [
                                  {
                                    "protocolType": "Http",
                                    "port": 80
                                  },
                                  {
                                    "protocolType": "Https",
                                    "port": 443
                                  }
                                ],
                                "fqdnTags": [],
                                "targetFqdns": [
                                  "archive.ubuntu.com",
                                  "github.com",
                                  "*.maven.apache.org",
                                  "conjars.org"
                                ],
                                "targetUrls": [],
                                "terminateTLS": false,
                                "sourceAddresses": [
                                  "*"
                                ],
                                "destinationAddresses": [],
                                "sourceIpGroups": [],
                                "description": "Allows Databricks Setup Notebook to run successfully"
                              }
                            ]
                          },
                          {
                            "name": "Azure-ApplicationRules",
                            "priority": 20500,
                            "action": {
                              "type": "Allow"
                            },
                            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                            "rules": [
                              {
                                "name": "Azure-ApplicationRule-001",
                                "ruleType": "ApplicationRule",
                                "protocols": [
                                  {
                                    "protocolType": "Http",
                                    "port": 80
                                  },
                                  {
                                    "protocolType": "Https",
                                    "port": 443
                                  }
                                ],
                                "fqdnTags": [],
                                "targetFqdns": [
                                  "*microsoft.com",
                                  "*azure.com",
                                  "*windows.com",
                                  "*windows.net",
                                  "*azure-automation.net",
                                  "*digicert.com"
                                ],
                                "targetUrls": [],
                                "terminateTLS": false,
                                "sourceAddresses": [
                                  "*"
                                ],
                                "destinationAddresses": [],
                                "sourceIpGroups": [],
                                "description": "Allows communication with Azure and Microsoft for Logging and Metrics as well as other services"
                              }
                            ]
                          },
                          {
                            "name": "AzureDevOps-ApplicationRules",
                            "priority": 20600,
                            "action": {
                              "type": "Allow"
                            },
                            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                            "rules": [
                              {
                                "name": "AzureDevOps-ApplicationRule-001",
                                "ruleType": "ApplicationRule",
                                "protocols": [
                                  {
                                    "protocolType": "Https",
                                    "port": 443
                                  }
                                ],
                                "fqdnTags": [],
                                "targetFqdns": [
                                  "*snapcraft.io",
                                  "vstsagentpackage.azureedge.net"
                                ],
                                "targetUrls": [],
                                "terminateTLS": false,
                                "sourceAddresses": [
                                  "*"
                                ],
                                "destinationAddresses": [],
                                "sourceIpGroups": [],
                                "description": "Allows installation of Visual Studio DevOps Agent extension"
                              }
                            ]
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/firewallPolicies/ruleCollectionGroups', split(format('{0}/networkrules-rulecollection', parameters('firewallPolicyName')), '/')[0], split(format('{0}/networkrules-rulecollection', parameters('firewallPolicyName')), '/')[1])]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/firewallPolicies', format('{0}-firewallpolicy', parameters('prefix')))]"
              ]
            },
            {
              "condition": "[and(not(parameters('enableDnsAndFirewallDeployment')), not(empty(parameters('firewallPolicyId'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-firewallpolicy-rules-toExistingFirewallPolicy', parameters('prefix'))]",
              "subscriptionId": "[variables('firewallPolicySubscriptionId')]",
              "resourceGroup": "[variables('firewallPolicyResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "firewallPolicyName": {
                    "value": "[variables('firewallPolicyName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.18.4.5664",
                      "templateHash": "6453827202746741518"
                    }
                  },
                  "parameters": {
                    "firewallPolicyName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/networkrules-rulecollection', parameters('firewallPolicyName'))]",
                      "properties": {
                        "priority": 10000,
                        "ruleCollections": [
                          {
                            "name": "MachineLearning-NetworkRules",
                            "priority": 10100,
                            "action": {
                              "type": "Allow"
                            },
                            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                            "rules": [
                              {
                                "name": "MachineLearning-NetworkRule-001",
                                "ruleType": "NetworkRule",
                                "ipProtocols": [
                                  "TCP"
                                ],
                                "sourceAddresses": [
                                  "*"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [
                                  "AzureActiveDirectory",
                                  "AzureMachineLearning",
                                  "AzureResourceManager",
                                  "Storage",
                                  "AzureKeyVault",
                                  "AzureContainerRegistry",
                                  "MicrosoftContainerRegistry",
                                  "AzureFrontDoor.FirstParty"
                                ],
                                "destinationIpGroups": [],
                                "destinationFqdns": [],
                                "destinationPorts": [
                                  "*"
                                ],
                                "description": "Allow outbound access to required services"
                              }
                            ]
                          },
                          {
                            "name": "HDInsight-NetworkRules",
                            "priority": 10200,
                            "action": {
                              "type": "Allow"
                            },
                            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                            "rules": [
                              {
                                "name": "HDInsight-NetworkRule-001",
                                "ruleType": "NetworkRule",
                                "ipProtocols": [
                                  "TCP"
                                ],
                                "sourceAddresses": [
                                  "*"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [
                                  "Sql"
                                ],
                                "destinationIpGroups": [],
                                "destinationFqdns": [],
                                "destinationPorts": [
                                  "1433"
                                ],
                                "description": "Allow default SQL servers provided by HDInsight"
                              },
                              {
                                "name": "HDInsight-NetworkRule-002",
                                "ruleType": "NetworkRule",
                                "ipProtocols": [
                                  "TCP"
                                ],
                                "sourceAddresses": [
                                  "*"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [
                                  "AzureMonitor"
                                ],
                                "destinationIpGroups": [],
                                "destinationFqdns": [],
                                "destinationPorts": [
                                  "*"
                                ],
                                "description": "Allows scale feature of HDInsight"
                              }
                            ]
                          },
                          {
                            "name": "Databricks-NetworkRules",
                            "priority": 10300,
                            "action": {
                              "type": "Allow"
                            },
                            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                            "rules": [
                              {
                                "name": "Databricks-NetworkRule-001",
                                "ruleType": "NetworkRule",
                                "ipProtocols": [
                                  "TCP"
                                ],
                                "sourceAddresses": [
                                  "*"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [
                                  "AzureActiveDirectory",
                                  "AzureFrontDoor.Frontend"
                                ],
                                "destinationIpGroups": [],
                                "destinationFqdns": [],
                                "destinationPorts": [
                                  "443"
                                ],
                                "description": "Allow OAuth flow for the User to the Workspace Private Endpoint and features like Mount Points, Credential Passthrough, etc."
                              },
                              {
                                "name": "Databricks-NetworkRule-002",
                                "ruleType": "NetworkRule",
                                "ipProtocols": [
                                  "TCP"
                                ],
                                "sourceAddresses": [
                                  "*"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [
                                  "AzureDatabricks",
                                  "Storage"
                                ],
                                "destinationIpGroups": [],
                                "destinationFqdns": [],
                                "destinationPorts": [
                                  "443"
                                ],
                                "description": "Required for workers communication with Azure Storage services and Databricks Webapp"
                              },
                              {
                                "name": "Databricks-NetworkRule-003",
                                "ruleType": "NetworkRule",
                                "ipProtocols": [
                                  "TCP"
                                ],
                                "sourceAddresses": [
                                  "*"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [
                                  "Sql"
                                ],
                                "destinationIpGroups": [],
                                "destinationFqdns": [],
                                "destinationPorts": [
                                  "3306"
                                ],
                                "description": "Required for workers communication with Azure SQL services"
                              },
                              {
                                "name": "Databricks-NetworkRule-004",
                                "ruleType": "NetworkRule",
                                "ipProtocols": [
                                  "TCP"
                                ],
                                "sourceAddresses": [
                                  "*"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [
                                  "EventHub"
                                ],
                                "destinationIpGroups": [],
                                "destinationFqdns": [],
                                "destinationPorts": [
                                  "9093"
                                ],
                                "description": "Required for workers communication with Azure Eventhub services"
                              }
                            ]
                          },
                          {
                            "name": "Azure-NetworkRules",
                            "priority": 10400,
                            "action": {
                              "type": "Allow"
                            },
                            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                            "rules": [
                              {
                                "name": "Azure-NetworkRule-001",
                                "ruleType": "NetworkRule",
                                "ipProtocols": [
                                  "TCP"
                                ],
                                "sourceAddresses": [
                                  "*"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [
                                  "23.102.135.246",
                                  "51.4.143.248",
                                  "23.97.0.13",
                                  "42.159.7.249"
                                ],
                                "destinationIpGroups": [],
                                "destinationFqdns": [],
                                "destinationPorts": [
                                  "1688"
                                ],
                                "description": "Allow Windows Activation in Azure through Azure KMS Service"
                              }
                            ]
                          },
                          {
                            "name": "AzureDevOps-NetworkRules",
                            "priority": 10500,
                            "action": {
                              "type": "Allow"
                            },
                            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                            "rules": [
                              {
                                "name": "AzureDevOps-NetworkRule-001",
                                "ruleType": "NetworkRule",
                                "ipProtocols": [
                                  "TCP"
                                ],
                                "sourceAddresses": [
                                  "*"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [
                                  "13.107.6.0/24",
                                  "13.107.9.0/24",
                                  "13.107.42.0/24",
                                  "13.107.43.0/24"
                                ],
                                "destinationIpGroups": [],
                                "destinationFqdns": [],
                                "destinationPorts": [
                                  "443"
                                ],
                                "description": "Allow Self-hosted DevOps Agents to poll for pending jobs"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/applicationrules-rulecollection', parameters('firewallPolicyName'))]",
                      "properties": {
                        "priority": 20000,
                        "ruleCollections": [
                          {
                            "name": "MachineLearning-ApplicationRules",
                            "priority": 20100,
                            "action": {
                              "type": "Allow"
                            },
                            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                            "rules": [
                              {
                                "name": "MachineLearning-ApplicationRule-001",
                                "ruleType": "ApplicationRule",
                                "protocols": [
                                  {
                                    "protocolType": "Http",
                                    "port": 80
                                  },
                                  {
                                    "protocolType": "Https",
                                    "port": 443
                                  }
                                ],
                                "fqdnTags": [],
                                "targetFqdns": [
                                  "anaconda.com",
                                  "*.anaconda.com",
                                  "*.anaconda.org",
                                  "pypi.org",
                                  "cloud.r-project.org",
                                  "*pytorch.org",
                                  "*.tensorflow.org",
                                  "update.code.visualstudio.com",
                                  "*.vo.msecnd.net",
                                  "*.instances.azureml.net",
                                  "*.instances.azureml.ms"
                                ],
                                "targetUrls": [],
                                "terminateTLS": false,
                                "sourceAddresses": [
                                  "*"
                                ],
                                "destinationAddresses": [],
                                "sourceIpGroups": [],
                                "description": "MachineLearning allow common FQDNs"
                              }
                            ]
                          },
                          {
                            "name": "HDInsight-ApplicationRules",
                            "priority": 20200,
                            "action": {
                              "type": "Allow"
                            },
                            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                            "rules": [
                              {
                                "name": "HDInsight-ApplicationRule-001",
                                "ruleType": "ApplicationRule",
                                "protocols": [
                                  {
                                    "protocolType": "Http",
                                    "port": 80
                                  },
                                  {
                                    "protocolType": "Https",
                                    "port": 443
                                  }
                                ],
                                "fqdnTags": [
                                  "HDInsight",
                                  "WindowsUpdate"
                                ],
                                "targetFqdns": [],
                                "targetUrls": [],
                                "terminateTLS": false,
                                "sourceAddresses": [
                                  "*"
                                ],
                                "destinationAddresses": [],
                                "sourceIpGroups": [],
                                "description": "HDInsight Service Tag Rule"
                              },
                              {
                                "name": "HDInsight-ApplicationRule-002",
                                "ruleType": "ApplicationRule",
                                "protocols": [
                                  {
                                    "protocolType": "Https",
                                    "port": 443
                                  }
                                ],
                                "fqdnTags": [],
                                "targetFqdns": [
                                  "login.microsoftonline.com",
                                  "login.windows.net"
                                ],
                                "targetUrls": [],
                                "terminateTLS": false,
                                "sourceAddresses": [
                                  "*"
                                ],
                                "destinationAddresses": [],
                                "sourceIpGroups": [],
                                "description": "Allows Windows login activity"
                              }
                            ]
                          },
                          {
                            "name": "DataFactory-ApplicationRules",
                            "priority": 20300,
                            "action": {
                              "type": "Allow"
                            },
                            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                            "rules": [
                              {
                                "name": "DataFactory-ApplicationRule-001",
                                "ruleType": "ApplicationRule",
                                "protocols": [
                                  {
                                    "protocolType": "Http",
                                    "port": 80
                                  },
                                  {
                                    "protocolType": "Https",
                                    "port": 443
                                  }
                                ],
                                "fqdnTags": [],
                                "targetFqdns": [
                                  "go.microsoft.com",
                                  "download.microsoft.com",
                                  "browser.events.data.msn.com",
                                  "*.clouddatahub.net"
                                ],
                                "targetUrls": [],
                                "terminateTLS": false,
                                "sourceAddresses": [
                                  "*"
                                ],
                                "destinationAddresses": [],
                                "sourceIpGroups": [],
                                "description": "Allows download of Self-hosted Integration Runtime installer and updates"
                              },
                              {
                                "name": "DataFactory-ApplicationRule-002",
                                "ruleType": "ApplicationRule",
                                "protocols": [
                                  {
                                    "protocolType": "Https",
                                    "port": 443
                                  }
                                ],
                                "fqdnTags": [],
                                "targetFqdns": [
                                  "*.servicebus.windows.net"
                                ],
                                "targetUrls": [],
                                "terminateTLS": false,
                                "sourceAddresses": [
                                  "*"
                                ],
                                "destinationAddresses": [],
                                "sourceIpGroups": [],
                                "description": "Allows interactive authoring and logging with Self-hosted Integration Runtime and Azure SSIS"
                              },
                              {
                                "name": "DataFactory-ApplicationRule-003",
                                "ruleType": "ApplicationRule",
                                "protocols": [
                                  {
                                    "protocolType": "Http",
                                    "port": 80
                                  },
                                  {
                                    "protocolType": "Https",
                                    "port": 443
                                  }
                                ],
                                "fqdnTags": [],
                                "targetFqdns": [
                                  "*.githubusercontent.com"
                                ],
                                "targetUrls": [],
                                "terminateTLS": false,
                                "sourceAddresses": [
                                  "*"
                                ],
                                "destinationAddresses": [],
                                "sourceIpGroups": [],
                                "description": "Allows download of SHIR install script from GitHub"
                              }
                            ]
                          },
                          {
                            "name": "Databricks-ApplicationRules",
                            "priority": 20400,
                            "action": {
                              "type": "Allow"
                            },
                            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                            "rules": [
                              {
                                "name": "Databricks-ApplicationRule-001",
                                "ruleType": "ApplicationRule",
                                "protocols": [
                                  {
                                    "protocolType": "Http",
                                    "port": 80
                                  },
                                  {
                                    "protocolType": "Https",
                                    "port": 443
                                  }
                                ],
                                "fqdnTags": [],
                                "targetFqdns": [
                                  "tunnel.australiaeast.azuredatabricks.net",
                                  "tunnel.brazilsouth.azuredatabricks.net",
                                  "tunnel.canadacentral.azuredatabricks.net",
                                  "tunnel.centralindia.azuredatabricks.net",
                                  "tunnel.eastus2.azuredatabricks.net",
                                  "tunnel.eastus2c2.azuredatabricks.net",
                                  "tunnel.eastusc3.azuredatabricks.net",
                                  "tunnel.centralusc2.azuredatabricks.net",
                                  "tunnel.northcentralusc2.azuredatabricks.net",
                                  "tunnel.southeastasia.azuredatabricks.net",
                                  "tunnel.francecentral.azuredatabricks.net",
                                  "tunnel.japaneast.azuredatabricks.net",
                                  "tunnel.koreacentral.azuredatabricks.net",
                                  "tunnel.northeuropec2.azuredatabricks.net",
                                  "tunnel.westus.azuredatabricks.net",
                                  "tunnel.westeurope.azuredatabricks.net",
                                  "tunnel.westeuropec2.azuredatabricks.net",
                                  "tunnel.southafricanorth.azuredatabricks.net",
                                  "tunnel.switzerlandnorth.azuredatabricks.net",
                                  "tunnel.uaenorth.azuredatabricks.net",
                                  "tunnel.ukwest.azuredatabricks.net"
                                ],
                                "targetUrls": [],
                                "terminateTLS": false,
                                "sourceAddresses": [
                                  "*"
                                ],
                                "destinationAddresses": [],
                                "sourceIpGroups": [],
                                "description": "Allows Secure Cluster Connectivity option"
                              },
                              {
                                "name": "Databricks-ApplicationRule-002",
                                "ruleType": "ApplicationRule",
                                "protocols": [
                                  {
                                    "protocolType": "Http",
                                    "port": 80
                                  },
                                  {
                                    "protocolType": "Https",
                                    "port": 443
                                  }
                                ],
                                "fqdnTags": [],
                                "targetFqdns": [
                                  "archive.ubuntu.com",
                                  "github.com",
                                  "*.maven.apache.org",
                                  "conjars.org"
                                ],
                                "targetUrls": [],
                                "terminateTLS": false,
                                "sourceAddresses": [
                                  "*"
                                ],
                                "destinationAddresses": [],
                                "sourceIpGroups": [],
                                "description": "Allows Databricks Setup Notebook to run successfully"
                              }
                            ]
                          },
                          {
                            "name": "Azure-ApplicationRules",
                            "priority": 20500,
                            "action": {
                              "type": "Allow"
                            },
                            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                            "rules": [
                              {
                                "name": "Azure-ApplicationRule-001",
                                "ruleType": "ApplicationRule",
                                "protocols": [
                                  {
                                    "protocolType": "Http",
                                    "port": 80
                                  },
                                  {
                                    "protocolType": "Https",
                                    "port": 443
                                  }
                                ],
                                "fqdnTags": [],
                                "targetFqdns": [
                                  "*microsoft.com",
                                  "*azure.com",
                                  "*windows.com",
                                  "*windows.net",
                                  "*azure-automation.net",
                                  "*digicert.com"
                                ],
                                "targetUrls": [],
                                "terminateTLS": false,
                                "sourceAddresses": [
                                  "*"
                                ],
                                "destinationAddresses": [],
                                "sourceIpGroups": [],
                                "description": "Allows communication with Azure and Microsoft for Logging and Metrics as well as other services"
                              }
                            ]
                          },
                          {
                            "name": "AzureDevOps-ApplicationRules",
                            "priority": 20600,
                            "action": {
                              "type": "Allow"
                            },
                            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                            "rules": [
                              {
                                "name": "AzureDevOps-ApplicationRule-001",
                                "ruleType": "ApplicationRule",
                                "protocols": [
                                  {
                                    "protocolType": "Https",
                                    "port": 443
                                  }
                                ],
                                "fqdnTags": [],
                                "targetFqdns": [
                                  "*snapcraft.io",
                                  "vstsagentpackage.azureedge.net"
                                ],
                                "targetUrls": [],
                                "terminateTLS": false,
                                "sourceAddresses": [
                                  "*"
                                ],
                                "destinationAddresses": [],
                                "sourceIpGroups": [],
                                "description": "Allows installation of Visual Studio DevOps Agent extension"
                              }
                            ]
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/firewallPolicies/ruleCollectionGroups', split(format('{0}/networkrules-rulecollection', parameters('firewallPolicyName')), '/')[0], split(format('{0}/networkrules-rulecollection', parameters('firewallPolicyName')), '/')[1])]"
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "outputs": {
            "vnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet', parameters('prefix')))]"
            },
            "serviceSubnet": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet', parameters('prefix'))), '2020-06-01').subnets[0].id]"
            },
            "firewallPrivateIp": {
              "type": "string",
              "value": "[if(parameters('enableDnsAndFirewallDeployment'), reference(resourceId('Microsoft.Network/azureFirewalls', format('{0}-firewall', parameters('prefix'))), '2020-11-01').ipConfigurations[0].properties.privateIPAddress, parameters('firewallPrivateIp'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-network', variables('name')))]"
      ]
    }
  ],
  "outputs": {
    "vnetId": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-network', variables('name'))), 'Microsoft.Resources/deployments', 'networkServices'), '2022-09-01').outputs.vnetId.value]"
    },
    "firewallPrivateIp": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-network', variables('name'))), 'Microsoft.Resources/deployments', 'networkServices'), '2022-09-01').outputs.firewallPrivateIp.value]"
    }
  }
}